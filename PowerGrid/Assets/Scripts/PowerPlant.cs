// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
public class PowerPlant : MonoBehaviour, IComparable
{
	public int baseCost;
	public int power;
	public int materialCost;
	[HideInInspector]
	public int materialStock;

	private GameObject miniCardObj = null;
	private PlantCardMiniView miniViewData = null;
	public Type type;
	
	public enum Type
	{
		Coal,
		Oil,
		Hybrid,
		Garbage,
		Uranium,
		Clean,
		Step3
	};
	
	public int CompareTo( object pp) {
		return baseCost.CompareTo (((PowerPlant)pp).baseCost);
	}
	
	public void Start() {
		miniCardObj = Instantiate(GameObject.Find ("PlantMiniCardView"));
		miniCardObj.transform.parent = transform;
	}

	public bool CanStockMoreMaterial() {
		return (materialStock < 2 * materialCost);
	}

	public GameObject MiniCardObj {
		get {
			return miniCardObj;
		}
	}

	public bool AddMaterial() {
		if (CanStockMoreMaterial ()) {
			materialStock++;
			return true;
		}
		return false;
	}

	public int RunPlant() {
		if(materialCost > materialStock)
			return 0;

		materialStock -= materialCost;
		return power;
	}

	public override string ToString() {
		string info = "cost:" + baseCost + " power:" + power + " materialCost:" + materialCost + " type:" + type;
		return info;
	}
	public void OnMouseOver() {
		if (GameState.instance.CurrentState == GameState.State.BuyPlants) {
			if (Input.GetMouseButtonDown (0)) {
				PowerPlantShop shop = GameObject.FindObjectOfType<PowerPlantShop>();
				shop.selectedPlant = this;
				shop.currentBid = baseCost;
			}
		}
	}

	public void Update() {
		if (miniViewData == null) {
			miniViewData = miniCardObj.GetComponent<PlantCardMiniView> ();
			if(miniViewData != null)
				miniViewData.Setup(this);
		}

	}
	public void OnGUI() {
		Vector3 screenPoint = Camera.main.WorldToScreenPoint(transform.position);
		screenPoint.y = Screen.height - screenPoint.y;
		GUI.Label(new Rect(screenPoint.x-25, screenPoint.y-25,200,100),gameObject.name + "\nCost:" +materialCost +"\nPwr:"+power);
	}
}

